workflows:
  safari_extension_convert:
    name: Safari Mobile Extension Auto-Build
    max_build_duration: 30
    instance_type: mac_mini_m2
    environment:
      xcode: 16.4
      vars:
        EXTENSION_NAME: "DexscreenerTraderExtension"
    scripts:
      - name: üßπ Clean workspace
        script: |
          rm -rf safari_project
          mkdir safari_project

      - name: üß© Verify and convert Chrome extension
        script: |
          echo "üîç Searching for manifest.json..."
          MANIFEST_PATH=$(find . -name manifest.json | head -n 1)
          if [ -z "$MANIFEST_PATH" ]; then
            echo "‚ùå No manifest.json found ‚Äî cannot continue."
            exit 1
          fi

          echo "‚úÖ Found manifest at: $MANIFEST_PATH"
          EXT_DIR=$(dirname "$MANIFEST_PATH")
          echo "Converting extension in: $EXT_DIR"

          cd "$EXT_DIR"
          xcrun safari-web-extension-converter . \
            --project-location "$PWD/../safari_project" \
            --app-name "${EXTENSION_NAME}" \
            --no-prompt \
            --force

          echo "‚úÖ Conversion complete. Checking output..."
          ls -la ../safari_project || echo "‚ö†Ô∏è safari_project folder is empty!"

      - name: üöÄ Build Safari extension (iOS mobile)
        script: |
          echo "üì¶ Building Safari iOS extension..."
          cd ../safari_project || { echo "‚ùå safari_project missing"; exit 1; }

          echo "Listing contents for debug:"
          ls -R

          PROJECT=$(find . -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT" ]; then
            echo "‚ùå No Xcode project found after conversion."
            exit 1
          fi

          echo "‚úÖ Found project: $PROJECT"

          SCHEME=$(xcodebuild -list -project "$PROJECT" | grep "iOS (App)" | head -n 1 | xargs)
          if [ -z "$SCHEME" ]; then
            echo "‚ö†Ô∏è iOS (App) scheme not found, falling back to first detected scheme..."
            SCHEME=$(xcodebuild -list -project "$PROJECT" | grep -A1 "Schemes:" | tail -n1 | xargs)
          fi

          echo "Detected scheme: $SCHEME"

          if [ -z "$SCHEME" ]; then
            echo "‚ùå No valid iOS scheme found ‚Äî cannot continue."
            exit 1
          fi

          echo "üöÄ Starting iOS build..."
          xcodebuild -project "$PROJECT" -scheme "$SCHEME" -configuration Release -sdk iphoneos CODE_SIGNING_ALLOWED=NO

          echo "‚úÖ iOS Safari extension built successfully!"
          ls -R build || echo "‚ö†Ô∏è Build folder missing!"

    artifacts:
      - safari_project/build/Release-iphoneos/
    publishing:
      email:
        recipients:
          - tradezconsulting@icloud.com
