workflows:
  safari_extension_build:
    name: Dexscreener Trader Safari Extension
    max_build_duration: 60
    environment:
      xcode: latest
      vars:
        APP_NAME: "Dexscreener-trader-extension"
    scripts:
      - name: Verify manifest and prepare
        script: |
          echo "üß© Checking manifest.json..."
          if [ ! -f "manifest.json" ]; then
            echo "‚ùå manifest.json not found!"
            exit 1
          fi

          MANIFEST_VERSION=$(grep '"manifest_version"' manifest.json | grep -o '[0-9]*')
          echo "Manifest version: $MANIFEST_VERSION"
          if [ "$MANIFEST_VERSION" -eq 3 ]; then
            echo "‚ö†Ô∏è Detected manifest v3 ‚Äî converting to v2 for Safari compatibility..."
            sed -i '' 's/"manifest_version": 3/"manifest_version": 2/' manifest.json
          fi

      - name: Convert Chrome extension to Safari (force project)
        script: |
          echo "üß© Running safari-web-extension-converter..."
          mkdir -p /tmp/safari_build
          xcrun safari-web-extension-converter . \
            --no-prompt \
            --force \
            --project-location /tmp/safari_build
          ls -la /tmp/safari_build
          echo "‚úÖ Safari project created."

      - name: Fix missing .xcodeproj if needed
        script: |
          echo "üîç Checking for .xcodeproj..."
          cd /tmp/safari_build
          if ! ls *.xcodeproj >/dev/null 2>&1; then
            echo "‚ö†Ô∏è No Xcode project found. Creating placeholder..."
            mkdir -p PlaceholderProject
            cd PlaceholderProject
            xcodebuild -create-xcframework > /dev/null 2>&1 || echo "‚úÖ Placeholder ready."
          else
            echo "‚úÖ Xcode project detected."
          fi

      - name: Build Safari extension app
        script: |
          echo "üöÄ Building Safari extension..."
          cd /tmp/safari_build
          PROJECT=$(find . -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT" ]; then
            echo "‚ùå Still no Xcode project found."
            exit 1
          fi
          SCHEME=$(xcodebuild -list -project "$PROJECT" -json | grep -A 1 '"schemes"' | tail -n 1 | tr -d '", ')
          echo "‚úÖ Using scheme: $SCHEME"
          xcodebuild -project "$PROJECT" -scheme "$SCHEME" -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Package output
        script: |
          echo "üì¶ Packaging .app output..."
          mkdir -p $CM_BUILD_DIR/output
          find /tmp/safari_build -name "*.app" -exec cp -r {} $CM_BUILD_DIR/output/ \;
          echo "‚úÖ Done."

    artifacts:
      - output/**

    publishing:
      email:
        recipients:
          - Tradezconsulting@icloud.com
