workflows:
  safari_extension_build:
    name: Dexscreener Trader Safari Extension
    max_build_duration: 60
    environment:
      xcode: latest
      vars:
        APP_NAME: "Dexscreener-trader-extension"
    scripts:
      - name: Verify manifest and prepare
        script: |
          echo "üß© Checking manifest.json..."
          if [ ! -f "manifest.json" ]; then
            echo "‚ùå manifest.json not found!"
            exit 1
          fi

          MANIFEST_VERSION=$(grep '"manifest_version"' manifest.json | grep -o '[0-9]*')
          echo "Manifest version: $MANIFEST_VERSION"
          if [ "$MANIFEST_VERSION" -eq 3 ]; then
            echo "‚ö†Ô∏è Detected manifest v3 ‚Äî converting to v2 for Safari compatibility..."
            sed -i '' 's/"manifest_version": 3/"manifest_version": 2/' manifest.json
          fi

      - name: Convert Chrome extension to Safari
        script: |
          echo "üß© Running safari-web-extension-converter..."
          mkdir -p /tmp/safari_build
          xcrun safari-web-extension-converter . \
            --no-prompt \
            --force \
            --project-location /tmp/safari_build
          echo "‚úÖ Safari project created at /tmp/safari_build"
          ls /tmp/safari_build

      - name: Detect available schemes
        script: |
          echo "üîç Searching for .xcodeproj and listing schemes..."
          cd /tmp/safari_build
          PROJECT=$(find . -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT" ]; then
            echo "‚ùå No Xcode project found."
            exit 1
          fi
          echo "üì¶ Found project: $PROJECT"
          xcodebuild -list -project "$PROJECT"
          SCHEME=$(xcodebuild -list -project "$PROJECT" | grep -E "Dexscreener.*(macOS|iOS)" | head -n 1 | sed 's/^ *//')
          if [ -z "$SCHEME" ]; then
            echo "‚ö†Ô∏è No valid scheme detected; fallback to first one..."
            SCHEME=$(xcodebuild -list -project "$PROJECT" | grep -A 1 "Schemes:" | tail -n 1 | sed 's/^ *//')
          fi
          echo "‚úÖ Using scheme: '$SCHEME'"
          echo "SCHEME=$SCHEME" >> $CM_ENV

      - name: Build Safari extension app
        script: |
          echo "üöÄ Building Safari extension..."
          cd /tmp/safari_build
          PROJECT=$(find . -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT" ]; then
            echo "‚ùå No Xcode project found, cannot build."
            exit 1
          fi
          if [ -z "$SCHEME" ]; then
            echo "‚ùå No scheme set."
            exit 1
          fi
          echo "‚úÖ Building with scheme: $SCHEME"
          xcodebuild -project "$PROJECT" -scheme "$SCHEME" -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | xcpretty

      - name: Package output
        script: |
          echo "üì¶ Packaging .app output..."
          mkdir -p $CM_BUILD_DIR/output
          find /tmp/safari_build -name "*.app" -exec cp -r {} $CM_BUILD_DIR/output/ \;
          echo "‚úÖ Done."

    artifacts:
      - output/**

    publishing:
      email:
        recipients:
          - Tradezconsulting@icloud.com
