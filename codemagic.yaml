workflows:
  safari_extension_build:
    name: Build Safari Extension (Dexscreener Trader)
    max_build_duration: 60
    environment:
      xcode: latest
      vars:
        APP_NAME: "Dexscreener-trader-extension"
    scripts:
      - name: Ensure manifest.json exists
        script: |
          if [ ! -f "manifest.json" ]; then
            echo "‚ùå manifest.json not found!"
            exit 1
          else
            echo "‚úÖ manifest.json found."
          fi

      - name: Convert Chrome extension to Safari (non-interactive)
        script: |
          echo "üß© Converting Chrome extension to Safari format..."
          xcrun safari-web-extension-converter . \
            --no-prompt \
            --force \
            --project-location ./safari_project
          echo "‚úÖ Conversion complete. Project saved in ./safari_project"

      - name: Build Safari extension app
        script: |
          echo "üîß Building Safari app..."
          cd safari_project

          echo "üì¶ Checking available schemes..."
          SCHEME=$(xcodebuild -list -json | grep -A 1 '"schemes"' | tail -n 1 | tr -d '", ')
          echo "‚úÖ Detected scheme: $SCHEME"

          if [ -z "$SCHEME" ]; then
            echo "‚ùå No scheme found ‚Äî build cannot continue."
            exit 1
          fi

          echo "üöÄ Running Xcode build for scheme: $SCHEME"
          xcodebuild \
            -scheme "$SCHEME" \
            -configuration Release \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO

      - name: Package Safari extension
        script: |
          echo "üì¶ Packaging completed app..."
          mkdir -p $CM_BUILD_DIR/output
          find . -name "*.app" -exec cp -r {} $CM_BUILD_DIR/output/ \;
          echo "‚úÖ App packaged and copied to output directory"

    artifacts:
      - output/**

    publishing:
      email:
        recipients:
          - Tradezconsulting@icloud.com
